//
//  Prob02EvenFibonacci.swift
//  
//
//  Created by Evan Dorn on 5/6/17.
//
//

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
//  By starting with 1 and 2, the first 10 terms will be:
//  
//      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
//  By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
//    find the sum of the even-valued terms.

import Foundation

// Step 1: Create a fibonacci method
func fibonacci(n: Int) -> Int {
    var a = 0
    var b = 1

    for _ in 0..<n {
        let temp = a
        a = b
        b = temp + b
    }
    return a
}

var evenFibonaccis = [Int]()
var count: Int = 0

// Step 2: while the fibonacci values are less than 4 million
// check for an even fibonacci value and append it to the list
while fibonacci(n: count) < 4000000 {

    if fibonacci(n: count) % 2 == 0 {
        evenFibonaccis.append(fibonacci(n: count))
    }
    count += 1
}

// Step 3: Sum the values in the array and print the final result
let sum = evenFibonaccis.reduce(0, +)

print(sum)
